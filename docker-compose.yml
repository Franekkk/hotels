version: '3.4'
services:
  assets:
    build:
      context: docker/assets
      network: host
    volumes:
    - ./web:/web
    working_dir: /web/assets
    command: "webpack --watch"
    tty: true
    networks:
    - hotel
  web:
    build: docker/python
    image: hotel/python
    ports:
    - ${WEB_PORT}:8080
    volumes:
    - ./web:/srv/app
    depends_on:
    - reservation
    networks:
    - hotel
  reservation:
    build: docker/python
    image: hotel/python
    ports:
    - ${RESERVATION_PORT}:8080
    volumes:
    - ./reservation:/srv/app
    environment:
    - DATABASE_HOST=${DB_HOST}
    - DATABASE_NAME=${DB_NAME}
    - DATABASE_USER=${DB_USER}
    - DATABASE_PASSWORD=${DB_PASSWORD}
    - DATABASE_NAME_KRAKOW=hotel_krakow
    depends_on:
    - queue
    - hotel
    - db
    networks:
    - hotel
  worker:
    build: docker/python
    image: hotel/python
    ports:
    - ${WORKER_PORT}:8080
    volumes:
    - ./worker:/srv/app
    depends_on:
    - queue
    - hotel
    networks:
    - hotel
  queue:
    image: rabbitmq:3.7.4-management-alpine
    ports:
    - ${QUEUE_PORT}:5672
    - ${QUEUE_GUI_PORT}:15672
    environment:
    - RABBITMQ_DEFAULT_USER=${QUEUE_USER}
    - RABBITMQ_DEFAULT_PASS=${QUEUE_PASS}
    networks:
    - hotel
  hotel:
    build: docker/python
    image: hotel/python
    ports:
    - ${HOTEL_PORT}:8080
    volumes:
    - ./hotel:/srv/app
    environment:
    - DATABASE_HOST=${DB_HOST}
    - DATABASE_NAME=hotel_krakow
    - DATABASE_USER=root
    - DATABASE_PASSWORD=${DB_PASSWORD}
    depends_on:
    - db
    networks:
    - hotel
  db:
    image: mysql:5.7.23
    container_name: hotels-db
    ports:
      - ${DB_PORT}:3306
    volumes:
    - hotel_db_data:/var/lib/mysql
    - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
    - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
    networks:
    - hotel
  nginx:
    image: nginx:alpine
    container_name: hotels-nginx
    working_dir: /hotel
    volumes:
      - ./hotel_php:/hotel
      - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "8080:80"
    networks:
      - hotel
  hotel_krakow:
    build: docker/php
    container_name: hotels-hotel_krakow
    working_dir: /hotel
    environment:
      - DB_HOST=db
    env_file:
      - ./hotel_krakow.env
    volumes:
      - ./hotel_php:/hotel
      - ./docker/php/php-ini-overrides.ini:/etc/php/7.2/fpm/conf.d/99-overrides.ini
    networks:
    - hotel
  redis:
    image: redis:alpine
    container_name: hotels-redis
    networks:
    - hotel
networks:
  hotel:
volumes:
  hotel_db_data:
